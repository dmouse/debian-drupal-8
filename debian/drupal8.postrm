#! /bin/bash
# postrm script for ${package_name}
#

set -e

if [ -f /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
fi

# source dbconfig-common stuff
if [ -f /usr/share/dbconfig-common/dpkg/postrm ]; then
	. /usr/share/dbconfig-common/dpkg/postrm
	dbc_go drupal8 $@
fi

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

if [ "$DPKG_DEBUG" = "developer" ]; then
    set -x
fi

package_name="drupal8"
datadir="/var/lib/${package_name}/"
backupdir="${datadir}backups/"
nukedir="/usr/share/${package_name}/"
docdir="/usr/share/doc/${package_name}/"
sqlfile="${docdir}database/database.mysql"
upgradesdir="${docdir}upgrades/"
configdir="/etc/drupal/8/"
configfile="${configdir}conf.php"
includefile="${configdir}apache2.conf"
dbconfigfile="${configdir}/sites/default/dbconfig.php"
cronfile="/etc/cron.d/${package_name}"

case "$1" in
	purge|remove)

		if [ "$1" = "purge" ]; then
			rm -f ${dbconfigfile}
			if which ucf >/dev/null 2>&1; then
				ucf --purge ${dbconfigfile}
			fi
        
			db_purge || true
		fi
	;;

	upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
	;;

	*)
		echo "postrm called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

